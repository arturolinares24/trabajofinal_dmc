version: 0.2  # Versión del archivo de configuración de CodeBuild

phases:
  pre_build:  # Fase previa a la construcción
    commands:
      - echo Logging in to Amazon ECR...  # Mensaje de inicio de sesión en Amazon ECR
      - echo $CODEBUILD_SOURCE_VERSION  # Mostrar la versión de la fuente del código
      - echo "Retrieving ECR login password"  # Mensaje indicando la recuperación de la contraseña de inicio de sesión de ECR
      - PASSWORD=$(aws ecr get-login-password --region $AWS_DEFAULT_REGION)  # Recuperar la contraseña de inicio de sesión de ECR
      - echo "Logging into Docker with ECR credentials"  # Mensaje indicando el inicio de sesión en Docker con credenciales de ECR
      - REPOSITORY_URI=774848641203.dkr.ecr.us-east-2.amazonaws.com/my-app  # URI del repositorio ECR
      - docker login --username AWS --password $PASSWORD $REPOSITORY_URI:latest  # Iniciar sesión en Docker con credenciales de ECR
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)  # Obtener los primeros 7 caracteres del hash del commit
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')  # Generar una etiqueta de imagen basada en el ID de construcción

  build:  # Fase de construcción
    commands:
      - echo Build started on `date`  # Mostrar mensaje con la fecha de inicio de la construcción
      - echo Building the Docker image...  # Mensaje indicando la construcción de la imagen Docker
      - docker build -t $REPOSITORY_URI:latest ml-project/.  # Construir la imagen Docker y etiquetarla como "latest"
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG  # Etiquetar la imagen Docker con la etiqueta generada

  post_build:  # Fase posterior a la construcción
    commands:
      - echo Build completed on `date`  # Mostrar mensaje con la fecha de finalización de la construcción
      - echo Pushing the Docker images...  # Mensaje indicando el inicio de la subida de las imágenes Docker
      - docker push $REPOSITORY_URI:latest  # Subir la imagen etiquetada como "latest" al repositorio ECR
      - docker push $REPOSITORY_URI:$IMAGE_TAG  # Subir la imagen etiquetada con la etiqueta generada al repositorio ECR
      - echo Writing image definitions file...  # Mensaje indicando la escritura del archivo de definiciones de imagen
      - printf '{"AWSEBDockerrunVersion":"1","Image":{"Name":"%s","Update":"true"},"Ports":[{"ContainerPort":8501}]}' $REPOSITORY_URI:$IMAGE_TAG > Dockerrun.aws.json  # Crear el archivo Dockerrun.aws.json con la configuración de la imagen Docker
      - cat Dockerrun.aws.json  # Mostrar el contenido del archivo Dockerrun.aws.json

artifacts:
  files: Dockerrun.aws.json  # Especificar que el archivo Dockerrun.aws.json se incluye como artefacto de la construcción
